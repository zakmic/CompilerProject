<AbstractSyntaxTree>
	<FunctionDecl>
		<Identifier>
			Square
		</Identifier>
		<FormalParams>
			<FormalParam>
				<Identifier>
					x
				</Identifier>
			</FormalParam>
		</FormalParams>
		<Block>
			<Return>
				<BinaryExpression>
					<Identifier>
						x
					</Identifier>
					<Identifier>
						x
					</Identifier>
					Binary: *
				</BinaryExpression>
			</Return>
		</Block>
	</FunctionDecl>
	<FunctionDecl>
		<Identifier>
			XGreaterThanY
		</Identifier>
		<FormalParams>
			<FormalParam>
				<Identifier>
					x
				</Identifier>
			</FormalParam>
			<FormalParam>
				<Identifier>
					y
				</Identifier>
			</FormalParam>
		</FormalParams>
		<Block>
			<Variable>
				<Identifier>
					ans
				</Identifier>
				<Expression>
				<Boolean>
					true
				</Boolean>
			</Expression>
			</Variable>
			<If>
				<BinaryExpression>
					<Identifier>
						x
					</Identifier>
					<Identifier>
						y
					</Identifier>
					Binary: >
				</BinaryExpression>
				<Block>
					<Assignment>
						<Identifier>
							ans
						</Identifier>
							<Boolean>
								false
							</Boolean>
						</Assignment>
					</Block>
				</If>
				<Return>
					<Identifier>
						ans
					</Identifier>
				</Return>
			</Block>
		</FunctionDecl>
		<FunctionDecl>
			<Identifier>
				AverageOfThree
			</Identifier>
			<FormalParams>
				<FormalParam>
					<Identifier>
						x
					</Identifier>
				</FormalParam>
				<FormalParam>
					<Identifier>
						y
					</Identifier>
				</FormalParam>
				<FormalParam>
					<Identifier>
						z
					</Identifier>
				</FormalParam>
			</FormalParams>
			<Block>
				<Variable>
					<Identifier>
						total
					</Identifier>
					<Expression>
					<BinaryExpression>
						<BinaryExpression>
							<Identifier>
								z
							</Identifier>
							<Identifier>
								y
							</Identifier>
							Binary: +
						</BinaryExpression>
						<Identifier>
							x
						</Identifier>
						Binary: +
					</BinaryExpression>
				</Expression>
				</Variable>
				<Return>
					<BinaryExpression>
						<Integer>
							3
						</Integer>
						<Identifier>
							total
						</Identifier>
						Binary: /
					</BinaryExpression>
				</Return>
			</Block>
		</FunctionDecl>
		<Variable>
			<Identifier>
				y
			</Identifier>
			<Expression>
			<FunctionCall>
				<Identifier>
					Square
				</Identifier>
				<ActualParameter>
					<Float>
						2.5
					</Float>
				</ActualParameter>
			</FunctionCall>
		</Expression>
		</Variable>
		<Variable>
			<Identifier>
				x
			</Identifier>
			<Expression>
			<FunctionCall>
				<Identifier>
					AverageOfThree
				</Identifier>
				<ActualParameter>
					<Identifier>
						y
					</Identifier>
					<Float>
						2.3
					</Float>
					<Float>
						2.8
					</Float>
				</ActualParameter>
			</FunctionCall>
		</Expression>
		</Variable>
		<Print>
			<SubExpr>
				<Identifier>
					y
				</Identifier>
			</SubExpr>
		</Print>
		<Print>
			<SubExpr>
				<Identifier>
					x
				</Identifier>
			</SubExpr>
		</Print>
		<FunctionDecl>
			<Identifier>
				Pow
			</Identifier>
			<FormalParams>
				<FormalParam>
					<Identifier>
						x
					</Identifier>
				</FormalParam>
				<FormalParam>
					<Identifier>
						n
					</Identifier>
				</FormalParam>
			</FormalParams>
			<Block>
				<Variable>
					<Identifier>
						y
					</Identifier>
					<Expression>
					<Float>
						1.0
					</Float>
				</Expression>
				</Variable>
				<If>
					<BinaryExpression>
						<Integer>
							0
						</Integer>
						<Identifier>
							n
						</Identifier>
						Binary: >
					</BinaryExpression>
					<Block>
						<For>
							<BinaryExpression>
								<Integer>
									0
								</Integer>
								<Identifier>
									n
								</Identifier>
								Binary: >
							</BinaryExpression>
							<Assignment>
								<Identifier>
									n
								</Identifier>
									<BinaryExpression>
										<Integer>
											1
										</Integer>
										<Identifier>
											n
										</Identifier>
										Binary: -
									</BinaryExpression>
								</Assignment>
								<Block>
									<Assignment>
										<Identifier>
											y
										</Identifier>
											<BinaryExpression>
												<Identifier>
													x
												</Identifier>
												<Identifier>
													y
												</Identifier>
												Binary: *
											</BinaryExpression>
										</Assignment>
									</Block>
								</For>
							</Block>
						</If>
						<Return>
							<Identifier>
								y
							</Identifier>
						</Return>
					</Block>
				</FunctionDecl>
				<Variable>
					<Identifier>
						z
					</Identifier>
					<Expression>
					<FunctionCall>
						<Identifier>
							Pow
						</Identifier>
						<ActualParameter>
							<Float>
								2.1
							</Float>
							<Integer>
								10
							</Integer>
						</ActualParameter>
					</FunctionCall>
				</Expression>
				</Variable>
				<Print>
					<SubExpr>
						<Identifier>
							z
						</Identifier>
					</SubExpr>
				</Print>
</AbstractSyntaxTree>
